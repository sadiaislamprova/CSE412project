class BinarySearch:
    def __init__(self, sorted_list):
        self.sorted_list = sorted_list

    def binary_search(self, target):
        low, high = 0, len(self.sorted_list) - 1

        while low <= high:
            mid = (low + high) // 2
            mid_element = self.sorted_list[mid]

            if mid_element == target:
                return mid  # Target found, return the index
            elif mid_element < target:
                low = mid + 1  # Search in the right half
            else:
                high = mid - 1  # Search in the left half

        return -1  # Return -1 if the target is not found

# Example usage:
sorted_list_to_search = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
target_element = 40
binary_searcher = BinarySearch(sorted_list_to_search)
result_index = binary_searcher.binary_search(target_element)

if result_index != -1:
    print(f"{target_element} found at index {result_index}.")
else:
    print(f"{target_element} not found in the list.")
