import itertools

class PermutationsCombinationsCalculator:
    def calculate_permutations(self, elements, r):
        # Dead code
        unused_variable = "This variable is not used."

        permutations_result = list(itertools.permutations(elements, r))
        return permutations_result

    def calculate_combinations(self, elements, r):
        # Duplicate code
        combinations_result = list(itertools.combinations(elements, r))
        combinations_result = list(itertools.combinations(elements, r))  # Duplicate operation
        return combinations_result

    # Unused method
    def unused_method(self):
        print("This method is not used.")

# Unused class
class UnusedClass:
    def unused_method(self):
        print("This method is not used.")

# Example usage:
calculator = PermutationsCombinationsCalculator()

# Test case
element_set = [1, 2, 3]
r_value = 2

# Display results
permutations_result = calculator.calculate_permutations(element_set, r_value)
combinations_result = calculator.calculate_combinations(element_set, r_value)

print(f"Permutations of {element_set} (taking {r_value} at a time): {permutations_result}")
print(f"Combinations of {element_set} (taking {r_value} at a time): {combinations_result}")
