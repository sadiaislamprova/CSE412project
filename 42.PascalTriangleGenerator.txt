class PascalTriangleGenerator:
    def generate_pascals_triangle(self, num_rows):
        if num_rows <= 0:
            return "Invalid input. Please provide a positive number of rows."

        pascals_triangle = [[1] * (row + 1) for row in range(num_rows)]
        
        for i in range(2, num_rows):
            for j in range(1, i):
                pascals_triangle[i][j] = pascals_triangle[i - 1][j - 1] + pascals_triangle[i - 1][j]

        return pascals_triangle

    def display_pascals_triangle(self, pascals_triangle):
        for row in pascals_triangle:
            print(' '.join(map(str, row)).center(len(pascals_triangle[-1]) * 3))

# Example usage:
triangle_generator = PascalTriangleGenerator()

# Specify the number of rows
num_rows = 5

# Generate and display Pascal's triangle
pascals_triangle_result = triangle_generator.generate_pascals_triangle(num_rows)
triangle_generator.display_pascals_triangle(pascals_triangle_result)
