class ListRotator:
    def rotate_list(self, input_list, positions):
        if not input_list or positions == 0:
            return input_list

        n = len(input_list)
        positions %= n  # Ensure positions is within the length of the list

        # Rotate the list using slicing
        rotated_list = input_list[-positions:] + input_list[:-positions]
        return rotated_list

# Example usage:
list_rotator = ListRotator()

# Test case
original_list = [1, 2, 3, 4, 5]
rotate_positions = 2

# Display result
rotated_list_result = list_rotator.rotate_list(original_list, rotate_positions)
print(f"The original list: {original_list}")
print(f"The list after rotating {rotate_positions} positions to the right: {rotated_list_result}")
